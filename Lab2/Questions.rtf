{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red204\green204\blue202;
\red0\green0\blue233;\red202\green202\blue202;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c83591\c83590\c83069;
\cssrgb\c0\c0\c93333;\cssrgb\c83137\c83137\c83137;}
\margl1440\margr1440\vieww12940\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Question 1: \
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 socket.socket(socket.AF_INET, socket.SOCK_STREAM), or to be more precise, the second argument, \'93socket.SOCK_STREAM\'94 specifies a TCP socket in Python.\
Question2:\
Client socket is created using connect() while Server is created using bind(). And server mainly listens to self generated information while client listens for information received from another host.\
Question3:\
Use \'93Process(target=handle_echo, args=addr,conn)\'94 from the multiprocessing module. Doing so allows us to generate multiple connections at different ports. \
Question4:\
Processes\'92 names, pid, and parent \
Question5;\
User-Agent, csrfToken, etc.\
Question6:\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/Dasha-Kinsely/CMPUT-404-Labs/tree/master/Lab2"}}{\fldrslt 
\f2 \cf5 \cb1 \ul \ulc5 \strokec5 https://github.com/Dasha-Kinsely/CMPUT-404-Labs/tree/master/Lab2}}
\f2 \cf5 \cb1 \ul \ulc5 \strokec5 \

\f1 \cf2 \cb3 \ulnone \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb1 \strokec6 \
}